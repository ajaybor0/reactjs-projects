{"version":3,"sources":["components/ToDoItem.jsx","components/InputArea.jsx","components/App.jsx","index.js"],"names":["ToDoItem","props","onClick","onChecked","id","text","InputArea","useState","inputText","setInputText","className","onChange","event","newValue","target","value","type","onAdd","App","localStorage","getItem","JSON","parse","items","setItems","deleteItem","prevItems","filter","item","index","useEffect","setItem","stringify","map","todoItem","ReactDOM","render","document","getElementById"],"mappings":"0OAceA,MAZf,SAAkBC,GAChB,OACE,qBACEC,QAAS,WACPD,EAAME,UAAUF,EAAMG,KAF1B,SAKE,6BAAKH,EAAMI,UCgBFC,MAvBf,SAAmBL,GAClB,MAAkCM,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAOA,OACC,sBAAKC,UAAU,OAAf,UACC,uBAAOC,SAPT,SAAsBC,GACrB,IAAMC,EAAWD,EAAME,OAAOC,MAC9BN,EAAaI,IAKmBG,KAAK,OAAOD,MAAOP,IAClD,wBACCN,QAAS,WACRD,EAAMgB,MAAMT,GACZC,EAAa,KAHf,SAMC,6CC0CWS,MA/Cf,WACC,MAA0BX,mBAVfY,aAAaC,QAAQ,SAGxBC,KAAKC,MAAMH,aAAaC,QAAQ,UAEhC,IAKR,mBAAOG,EAAP,KAAcC,EAAd,KAYA,SAASC,EAAWrB,GACnBoB,GAAS,SAAAE,GACR,OAAOA,EAAUC,QAAO,SAACC,EAAMC,GAC9B,OAAOA,IAAUzB,QASpB,OAJA0B,qBAAU,WACTX,aAAaY,QAAQ,QAASV,KAAKW,UAAUT,MAC3C,CAACA,IAGH,sBAAKb,UAAU,YAAf,UACC,qBAAKA,UAAU,UAAf,SACC,8CAED,cAAC,EAAD,CAAWO,MA3Bb,SAAiBT,GAChBgB,GAAS,SAAAE,GACR,MAAkB,KAAdlB,EACI,YAAIkB,GAEL,GAAN,mBAAWA,GAAX,CAAsBlB,UAuBvB,8BACC,6BACEe,EAAMU,KAAI,SAACC,EAAUL,GAAX,OACV,cAAC,EAAD,CAECzB,GAAIyB,EACJxB,KAAM6B,EACN/B,UAAWsB,GAHNI,cC7CZM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.32987ed2.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ToDoItem(props) {\n  return (\n    <div\n      onClick={() => {\n        props.onChecked(props.id);\n      }}\n    >\n      <li>{props.text}</li>\n    </div>\n  );\n}\n\nexport default ToDoItem;\n","import React, { useState } from \"react\";\n\nfunction InputArea(props) {\n\tconst [inputText, setInputText] = useState(\"\");\n\n\tfunction handleChange(event) {\n\t\tconst newValue = event.target.value;\n\t\tsetInputText(newValue);\n\t}\n\n\treturn (\n\t\t<div className=\"form\">\n\t\t\t<input onChange={handleChange} type=\"text\" value={inputText} />\n\t\t\t<button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tprops.onAdd(inputText);\n\t\t\t\t\tsetInputText(\"\");\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<span>Add</span>\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default InputArea;\n","import React, { useState, useEffect } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport InputArea from \"./InputArea\";\n\nconst getTodoItems = () => {\n\tlet list = localStorage.getItem(\"lists\");\n\n\tif (list) {\n\t\treturn JSON.parse(localStorage.getItem(\"lists\"));\n\t} else {\n\t\treturn [];\n\t}\n};\n\nfunction App() {\n\tconst [items, setItems] = useState(getTodoItems());\n\n\tfunction addItem(inputText) {\n\t\tsetItems(prevItems => {\n\t\t\tif (inputText === \"\") {\n\t\t\t\treturn [...prevItems];\n\t\t\t} else {\n\t\t\t\treturn [...prevItems, inputText];\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction deleteItem(id) {\n\t\tsetItems(prevItems => {\n\t\t\treturn prevItems.filter((item, index) => {\n\t\t\t\treturn index !== id;\n\t\t\t});\n\t\t});\n\t}\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\"lists\", JSON.stringify(items));\n\t}, [items]);\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"heading\">\n\t\t\t\t<h1>To-Do List</h1>\n\t\t\t</div>\n\t\t\t<InputArea onAdd={addItem} />\n\t\t\t<div>\n\t\t\t\t<ul>\n\t\t\t\t\t{items.map((todoItem, index) => (\n\t\t\t\t\t\t<ToDoItem\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tid={index}\n\t\t\t\t\t\t\ttext={todoItem}\n\t\t\t\t\t\t\tonChecked={deleteItem}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}